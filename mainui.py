# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.12.1
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(506, 507)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("ui/android_circle.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setStyleSheet("")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.progressBar = QtWidgets.QProgressBar(self.centralwidget)
        self.progressBar.setGeometry(QtCore.QRect(20, 430, 481, 23))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(115, 210, 22))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Highlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(115, 210, 22))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Highlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(145, 145, 145))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Highlight, brush)
        self.progressBar.setPalette(palette)
        self.progressBar.setProperty("value", 100)
        self.progressBar.setObjectName("progressBar")
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setGeometry(QtCore.QRect(20, 370, 481, 20))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.dimensionText = QtWidgets.QTextEdit(self.centralwidget)
        self.dimensionText.setEnabled(False)
        self.dimensionText.setGeometry(QtCore.QRect(290, 290, 211, 51))
        font = QtGui.QFont()
        font.setPointSize(24)
        self.dimensionText.setFont(font)
        self.dimensionText.setObjectName("dimensionText")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(290, 270, 151, 20))
        self.label_2.setObjectName("label_2")
        self.showTouches = QtWidgets.QCheckBox(self.centralwidget)
        self.showTouches.setGeometry(QtCore.QRect(20, 90, 251, 23))
        self.showTouches.setObjectName("showTouches")
        self.aotop = QtWidgets.QCheckBox(self.centralwidget)
        self.aotop.setGeometry(QtCore.QRect(20, 70, 251, 23))
        self.aotop.setToolTip("")
        self.aotop.setObjectName("aotop")
        self.bitrateText = QtWidgets.QTextEdit(self.centralwidget)
        self.bitrateText.setEnabled(False)
        self.bitrateText.setGeometry(QtCore.QRect(100, 290, 181, 51))
        font = QtGui.QFont()
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.bitrateText.setFont(font)
        self.bitrateText.setObjectName("bitrateText")
        self.build_label = QtWidgets.QLabel(self.centralwidget)
        self.build_label.setGeometry(QtCore.QRect(360, 30, 141, 21))
        self.build_label.setObjectName("build_label")
        self.dimensionSlider = QtWidgets.QSlider(self.centralwidget)
        self.dimensionSlider.setEnabled(False)
        self.dimensionSlider.setGeometry(QtCore.QRect(290, 350, 211, 20))
        self.dimensionSlider.setMinimum(320)
        self.dimensionSlider.setMaximum(2048)
        self.dimensionSlider.setProperty("value", 1280)
        self.dimensionSlider.setOrientation(QtCore.Qt.Horizontal)
        self.dimensionSlider.setObjectName("dimensionSlider")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(80, 10, 231, 51))
        font = QtGui.QFont()
        font.setPointSize(26)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.dial = QtWidgets.QDial(self.centralwidget)
        self.dial.setGeometry(QtCore.QRect(0, 250, 91, 111))
        self.dial.setCursor(QtGui.QCursor(QtCore.Qt.SizeHorCursor))
        self.dial.setMinimum(64)
        self.dial.setMaximum(16000)
        self.dial.setSingleStep(2)
        self.dial.setProperty("value", 8000)
        self.dial.setInvertedAppearance(False)
        self.dial.setInvertedControls(False)
        self.dial.setWrapping(False)
        self.dial.setNotchTarget(20.0)
        self.dial.setNotchesVisible(True)
        self.dial.setObjectName("dial")
        self.line_2 = QtWidgets.QFrame(self.centralwidget)
        self.line_2.setGeometry(QtCore.QRect(20, 60, 481, 16))
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(100, 270, 111, 17))
        self.label.setObjectName("label")
        self.executeaction = QtWidgets.QPushButton(self.centralwidget)
        self.executeaction.setGeometry(QtCore.QRect(288, 390, 211, 31))
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("rsrc/lightning.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.executeaction.setIcon(icon1)
        self.executeaction.setObjectName("executeaction")
        self.quit = QtWidgets.QPushButton(self.centralwidget)
        self.quit.setGeometry(QtCore.QRect(120, 390, 161, 31))
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("rsrc/cancel-1.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.quit.setIcon(icon2)
        self.quit.setObjectName("quit")
        self.dimensionDefaultCheckbox = QtWidgets.QCheckBox(self.centralwidget)
        self.dimensionDefaultCheckbox.setGeometry(QtCore.QRect(290, 250, 211, 23))
        self.dimensionDefaultCheckbox.setChecked(True)
        self.dimensionDefaultCheckbox.setObjectName("dimensionDefaultCheckbox")
        self.fullscreen = QtWidgets.QCheckBox(self.centralwidget)
        self.fullscreen.setGeometry(QtCore.QRect(20, 110, 251, 23))
        self.fullscreen.setObjectName("fullscreen")
        self.displayForceOn = QtWidgets.QCheckBox(self.centralwidget)
        self.displayForceOn.setGeometry(QtCore.QRect(20, 130, 421, 23))
        self.displayForceOn.setObjectName("displayForceOn")
        self.runningNot = QtWidgets.QToolButton(self.centralwidget)
        self.runningNot.setGeometry(QtCore.QRect(20, 210, 481, 31))
        self.runningNot.setStyleSheet("")
        self.runningNot.setText("")
        self.runningNot.setObjectName("runningNot")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(20, 10, 51, 51))
        self.label_4.setText("")
        self.label_4.setPixmap(QtGui.QPixmap("ui/android_circle.png"))
        self.label_4.setScaledContents(True)
        self.label_4.setObjectName("label_4")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(20, 390, 71, 31))
        self.pushButton.setText("")
        self.pushButton.setObjectName("pushButton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 506, 20))
        self.menubar.setObjectName("menubar")
        self.menuGUI_ScrcPy = QtWidgets.QMenu(self.menubar)
        self.menuGUI_ScrcPy.setObjectName("menuGUI_ScrcPy")
        self.menuAbout = QtWidgets.QMenu(self.menubar)
        self.menuAbout.setObjectName("menuAbout")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menubar.addAction(self.menuGUI_ScrcPy.menuAction())
        self.menubar.addAction(self.menuAbout.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "GUI Scrcpy"))
        MainWindow.setStatusTip(_translate("MainWindow", "GUI by srevinsaju, scrcpy engine by rom1v. Hosted on GitHub\n"
"                https://github.com/srevinsaju/guiscrcpy\n"
"            "))
        self.progressBar.setStatusTip(_translate("MainWindow", "Progress Bar"))
        self.dimensionText.setStatusTip(_translate("MainWindow", "Uncheck \'Keep Default Dimensions\' to change values"))
        self.dimensionText.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:24pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">                        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">DEFAULT</span>                                            </p></body></html>"))
        self.label_2.setText(_translate("MainWindow", "Max. Dimension"))
        self.showTouches.setText(_translate("MainWindow", "Show touches"))
        self.aotop.setText(_translate("MainWindow", "Always on Top"))
        self.bitrateText.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:24pt; font-weight:600; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">                        </p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">8000 KB/s                    </p></body></html>"))
        self.build_label.setText(_translate("MainWindow", "Build"))
        self.label_3.setStatusTip(_translate("MainWindow", "GUI by srevinsaju, scrcpy engine by rom1v. Hosted on GitHub\n"
"                        https://github.com/srevinsaju/guiscrcpy\n"
"                    "))
        self.label_3.setText(_translate("MainWindow", "GUI ScrcPy"))
        self.dial.setStatusTip(_translate("MainWindow", "Adjust Bitrate. Leave it untouched for defualts"))
        self.label.setText(_translate("MainWindow", "Bitrate"))
        self.executeaction.setStatusTip(_translate("MainWindow", "Start Scrcpy Executable right now. Please check if Scrcpy is added to path"))
        self.executeaction.setText(_translate("MainWindow", "START SCRCPY"))
        self.quit.setStatusTip(_translate("MainWindow", "quit GUI"))
        self.quit.setText(_translate("MainWindow", "QUIT"))
        self.dimensionDefaultCheckbox.setText(_translate("MainWindow", "Keep Default Dimensions"))
        self.fullscreen.setText(_translate("MainWindow", "Fullscreen"))
        self.displayForceOn.setText(_translate("MainWindow", "Keep display off on start-up (experimental)"))
        self.runningNot.setStatusTip(_translate("MainWindow", "Shows the status of the Scrcpy Daemon"))
        self.label_4.setToolTip(_translate("MainWindow", "GUI by srevinsaju, scrcpy engine by rom1v. Hosted on GitHub\n"
"                        https://github.com/srevinsaju/guiscrcpy\n"
"                    "))
        self.label_4.setStatusTip(_translate("MainWindow", "GUI by srevinsaju, scrcpy engine by rom1v. Hosted on GitHub\n"
"                        https://github.com/srevinsaju/guiscrcpy\n"
"                    "))
        self.menuGUI_ScrcPy.setTitle(_translate("MainWindow", "GUI ScrcPy"))
        self.menuAbout.setTitle(_translate("MainWindow", "About"))


