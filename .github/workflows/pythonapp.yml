name: Linux

on: 
  push:
    branches:
      - 'master'
    paths:
      - 'guiscrcpy/**'
      - '.github/workflows/pythonapp.yml'
  pull_request:
    paths:
      - 'guiscrcpy/**'
      - '.github/workflows/pythonapp.yml'


jobs:
  quality:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8  
        
    - name: Test setup.py
      run: |
        pip3 install .

    - name: Install Destop Environment
      run: |
        echo "adapted from https://github.com/AppImage/appimage.github.io/blob/master/.travis.yml"
        sudo apt-get update
        sudo apt-get -qq -y install imagemagick libasound2-dev pulseaudio-utils alsa-utils alsa-oss libjack0 desktop-file-utils xmlstarlet xterm xvfb icewm x11-utils x11-apps netpbm xdotool libgl1-mesa-dri libgl1-mesa-dev mesa-utils libosmesa6 libsdl1.2-dev fonts-wqy-microhei libfile-mimeinfo-perl > /dev/null # appstream # TODO: Cache me!
        mkdir $HOME/.icewm/
        echo "ShowTaskBar = 0" > $HOME/.icewm/preferences
        echo "TaskBarAutoHide = 1" > $HOME/.icewm/preferences
        echo "TaskBarShowWorkspaces = 0" > $HOME/.icewm/preferences
        echo "TaskBarShowAllWindows = 0" > $HOME/.icewm/preferences
        echo "TaskBarShowClock = 0" > $HOME/.icewm/preferences
        echo "TaskBarShowMailboxStatus = 0" > $HOME/.icewm/preferences
        echo "TaskBarShowCPUStatus = 0" > $HOME/.icewm/preferences
        echo "TaskBarShowWindowListMenu = 0" > $HOME/.icewm/preferences
        Xvfb :99 -screen 0 800x600x24 >/dev/null 2>&1 & # Need to set bit depth, otherwise get some black screenshots
        
        
    - name: Test guiscrcpy works 
      run: | 
        sleep 1
        export QT_DEBUG_PLUGINS=1
        guiscrcpy
        xwininfo -tree -root | grep 0x | grep '": ("' | sed -e 's/^[[:space:]]*//'
        # Count the windows on screen
        NUMBER_OF_WINDOWS=$(xwininfo -tree -root | grep 0x | grep '": ("' | sed -e 's/^[[:space:]]*//' | wc -l)
        echo "NUMBER_OF_WINDOWS: $NUMBER_OF_WINDOWS"
        if [ $(($NUMBER_OF_WINDOWS)) -lt 1 ] ; then
          echo "ERROR: Could not find a single window on screen :-("
        fi

        # Works with Xvfb but cannot select window by ID
        # sudo apt-get -y install scrot 
        # scrot -b 'screenshot_$wx$h.jpg' # -u gives "X Error of failed request:  BadDrawable (invalid Pixmap or Window parameter)"
        # mv screenshot_* database/$INPUTBASENAME/

        # Getting the active window seems to require a window manager
        icewm &
        sleep 2

        # We could simulate X11 keyboard/mouse input with xdotool here if needed;
        # of course this should not be hardcoded here (this is just an example)
        if [ x"$INPUTBASENAME" == xVLC ] ; then
          xdotool sleep 0.1 key Return # Click away the data protection window
          xdotool sleep 0.1 key shift+F1 # Open the about screen
          sleep 1
        fi
        if [ x"$INPUTBASENAME" == xSubsurface ] ; then
          xdotool sleep 0.1 key Escape # Click away the update check window
          sleep 1
          # Get a list of open windows
          xwininfo -tree -root | grep 0x | grep '": ("' | sed -e 's/^[[:space:]]*//'
        fi

        # Works with Xvfb
        # sudo apt-get -y install x11-apps netpbm xdotool # We do this in .travis.yml
        # -display :99 needed here? 
        # xwd -id $(xdotool getactivewindow) -silent | xwdtopnm | pnmtojpeg  > database/$INPUTBASENAME/screenshot.jpg && echo "Snap!"
        mkdir -p database/$INPUTBASENAME/
        # xwd -id $(xwininfo -tree -root | grep 0x | grep '": ("' | sed -e 's/^[[:space:]]*//' | head -n 1 | cut -d " " -f 1) -silent | xwdtopnm | pnmtojpeg  > database/$INPUTBASENAME/screenshot.jpg && echo "Snap!"
        # xwd -id $(xwininfo -tree -root | grep 0x | grep '": ("' | sed -e 's/^[[:space:]]*//' | head -n 1 | cut -d " " -f 1) -silent | xwdtopnm | pnmtopng  > database/$INPUTBASENAME/screenshot.png && echo "Snap!"
        convert x:$(xwininfo -tree -root | grep 0x | grep '": ("' | sed -e 's/^[[:space:]]*//' | head -n 1 | cut -d " " -f 1) screenshot.png && echo "Snap!"

        kill $APID && printf "\n\n\n* * * SUCCESS :-) * * *\n\n\n" || exit 1
        killall icewm
        
        
    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: guiscrcpy-screenshot.png
        path: screenshot.png

        
